Campus OpenData
===============

Esta es una aplicación web en la cual podemos ver los contenidos multimedia que tiene la web de Aragón Open Data, del mismo modo como un curso online de iniciación a los datos abiertos


### Información Técnica
Nuestra app es una aplicación web Python usando el framework [Flask](http://flask.pocoo.org/), y PostgreSQL como base de datos. En el ecosistema de Aragón Open Data hacemos uso del servidor web Apache2.

Para gestionar las depencias, usamos el gestor de dependencias `pip`, que puedes instalar en Linux con:

```
curl https://bootstrap.pypa.io/get-pip.py > get-pip.py
sudo python get-pip.py
```

Recomendamos aislar el entorno de desarrollo Python con `virtualenv`:

```
sudo pip install virtualenv
cd /path_de_app
virtualenv campusOpenData
```

En caso de duda consultar la documentación oficial de [pip](https://pip.readthedocs.org/en/latest/) y de [Virtualenv](https://virtualenv.readthedocs.org/en/latest/).


Antes de instalar las librerías Python requeridas, necesitas instalar PostgreSQL en tu sistema:

Ejemplo Ubuntu: `sudo apt-get install postgresql`

Ejemplo MacOSX, con [Homebrew](http://brew.sh/): `brew install postgresql`

Después, hay que crear e importar la base de datos a PostgreSQL (recuerda que si modificas el usuario y contraseña deberas de modificar el archivo dump de la base de datos):

```
sudo -u postgres psql postgres

CREATE user user password 'C0ntr4$3n4';

ALTER ROLE user WITH SUPERUSER;

CREATE DATABASE campusOpenDataDB WITH OWNER user;

GRANT ALL PRIVILEGES ON DATABASE campusOpenDataDB TO user;
\q

psql -h localhost -d campusopendatadb -U user -f /path_de_app/data/CreaBBDDCampusOpenData.sql


```
No olvides modificar el fichero `app/config.py` con tus datos de conexión a base de datos si los has modificado.


Creamos el entorno para con el que se instalaran las dependencias, en el directorio donde tenemos la app

`virtualenv campusOpenData`

Para poder instalar la dependecia y manejar bases de datos de PostgreSQL se necesita instalar un software especifico:

```
sudo apt-get install libpq-dev
sudo apt-get install libevent-dev
sudo apt-get install build-essential autoconf libtool pkg-config python-opengl python-imaging python-pyrex python-pyside.qtopengl idle-python2.7 qt4-dev-tools qt4-designer libqtgui4 libqtcore4 libqt4-xml libqt4-test libqt4-script libqt4-network libqt4-dbus python-qt4 python-qt4-gl libgle3 python-dev

```

Para instalar las dependencias de las librerías Python:

```
Si tenemos internet
campusOpenData/bin/pip install Flask
campusOpenData/bin/pip install psycopg2
campusOpenData/bin/pip install Flask-WTF
campusOpenData/bin/pip install WTForms
campusOpenData/bin/pip install Flask-HTTPAuth //Mirarlo



Si no tenemos internet
campusOpenData/bin/pip install requisites/argparse-1.4.0.tar.gz
campusOpenData/bin/pip install requisites/itsdangerous-0.24.tar.gz
campusOpenData/bin/pip install requisites/MarkupSafe-0.23.tar.gz
campusOpenData/bin/pip install requisites/Werkzeug-0.11.3.tar.gz
campusOpenData/bin/pip install requisites/Jinja2-2.8.tar.gz
campusOpenData/bin/pip install requisites/wsgiref-0.1.2.zip
campusOpenData/bin/pip install requisites/Flask-0.10.1.tar.gz
campusOpenData/bin/pip install requisites/psycopg2-2.6.1.tar.gz
campusOpenData/bin/pip install requisites/WTForms-2.1.zip
campusOpenData/bin/pip install requisites/Flask-WTF-0.12.tar.gz

```

###Configurar apache

Según el ecosistema de Aragón Open Data esta aplicación la tenemos en opendata.aragon.es/portal/campus/. Debemos activar los siguientes modulos, para ello abrimos un terminal e introducimos:

```

sudo apt-get install apache2
sudo a2enmod proxy proxy_http

```

Modificamos el fichero de configuración de apache añadiendo:

```

#Configuracion sobre la app de Campus Open Data
ProxyPass /portal/campus http://localhost:50052 retry=0
ProxyPassReverse /portal/campus http://localhost:50052


```

Recordar que despues hay que reiniciar apache para que los cambios surjan efecto.

###Arrancar la aplicación

Arrancamos la aplicación con:

```

/path_de_app/CampusOpenData/campusOpenData/bin/python /data/apps/CampusOpenData/run.py &


```

Ojo que el run.py esta la aplicación para que arranque en modo debug, se recomienda quitarlo para entornos de producción.

####Cerrar la aplicación

Ejecutamos el siguiente comando para cerrar la app:

```

killall /path_de_app/CampusOpenData/campusOpenData/bin/python 


```

### Notas sobre los cambios de la versión original

* En el original las urls estan en el mismo dominio, por lo que hay que modificar css y js para su correcto funcionamiento
